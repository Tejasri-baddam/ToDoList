{"ast":null,"code":"var _jsxFileName = \"/Users/tejasribaddam/Desktop/Projects/ToDoList/frontend/src/components/TaskForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { addTaskToList, updateExistingTask } from \"../services/TaskServices\";\nimport \"../styling/TaskForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  onTaskAdded,\n  taskToEdit,\n  onEditComplete,\n  closeForm\n}) => {\n  _s();\n  const [task, setTask] = useState(\"\");\n  useEffect(() => {\n    if (taskToEdit && taskToEdit.taskToBeDone) {\n      setTask(taskToEdit.taskToBeDone);\n    }\n  }, [taskToEdit]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (task.trim()) {\n      if (taskToEdit) {\n        const updatedTask = await updateExistingTask(taskToEdit.id, task); // Call API to update task\n        onEditComplete(updatedTask); // Update task list in parent component\n      } else {\n        const newTask = await addTaskToList(task); // Call API to add task\n        onTaskAdded(newTask); // Update task list in parent component\n      }\n      setTask(\"\"); // Reset input field\n      setTimeout(() => closeForm(), 100);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"task-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: task,\n      onChange: e => setTask(e.target.value),\n      placeholder: \"Enter a task...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: taskToEdit ? \"Update\" : \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"bI9Z1xIuXedKlW0cO3OXWHmJ09E=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["useState","useEffect","addTaskToList","updateExistingTask","jsxDEV","_jsxDEV","TaskForm","onTaskAdded","taskToEdit","onEditComplete","closeForm","_s","task","setTask","taskToBeDone","handleSubmit","e","preventDefault","trim","updatedTask","id","newTask","setTimeout","onSubmit","className","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tejasribaddam/Desktop/Projects/ToDoList/frontend/src/components/TaskForm.js"],"sourcesContent":["import { useState , useEffect} from \"react\";\nimport { addTaskToList,updateExistingTask } from \"../services/TaskServices\";\nimport \"../styling/TaskForm.css\";\n\nconst TaskForm = ({ onTaskAdded, taskToEdit, onEditComplete, closeForm }) => {\n  const [task, setTask] = useState(\"\");\n\n  useEffect(() => {\n    if(taskToEdit && taskToEdit.taskToBeDone) {\n        setTask(taskToEdit.taskToBeDone);\n    }\n  }, [taskToEdit]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (task.trim()) {\n      if (taskToEdit) {\n        const updatedTask = await updateExistingTask(taskToEdit.id, task); // Call API to update task\n        onEditComplete(updatedTask); // Update task list in parent component\n      } else {\n        const newTask = await addTaskToList(task); // Call API to add task\n        onTaskAdded(newTask); // Update task list in parent component\n      }\n      setTask(\"\"); // Reset input field\n      setTimeout(() => closeForm(), 100); \n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"task-form\">\n      <input\n        type=\"text\"\n        value={task}\n        onChange={(e) => setTask(e.target.value)}\n        placeholder=\"Enter a task...\"\n      />\n      <button type=\"submit\">{taskToEdit ? \"Update\" : \"Add\"}</button>\n    </form>\n  );\n};\n\nexport default TaskForm;"],"mappings":";;AAAA,SAASA,QAAQ,EAAGC,SAAS,QAAO,OAAO;AAC3C,SAASC,aAAa,EAACC,kBAAkB,QAAQ,0BAA0B;AAC3E,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,WAAW;EAAEC,UAAU;EAAEC,cAAc;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC3E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,IAAGO,UAAU,IAAIA,UAAU,CAACM,YAAY,EAAE;MACtCD,OAAO,CAACL,UAAU,CAACM,YAAY,CAAC;IACpC;EACF,CAAC,EAAE,CAACN,UAAU,CAAC,CAAC;EAEhB,MAAMO,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIL,IAAI,CAACM,IAAI,CAAC,CAAC,EAAE;MACf,IAAIV,UAAU,EAAE;QACd,MAAMW,WAAW,GAAG,MAAMhB,kBAAkB,CAACK,UAAU,CAACY,EAAE,EAAER,IAAI,CAAC,CAAC,CAAC;QACnEH,cAAc,CAACU,WAAW,CAAC,CAAC,CAAC;MAC/B,CAAC,MAAM;QACL,MAAME,OAAO,GAAG,MAAMnB,aAAa,CAACU,IAAI,CAAC,CAAC,CAAC;QAC3CL,WAAW,CAACc,OAAO,CAAC,CAAC,CAAC;MACxB;MACAR,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;MACbS,UAAU,CAAC,MAAMZ,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC;IACpC;EACF,CAAC;EAED,oBACEL,OAAA;IAAMkB,QAAQ,EAAER,YAAa;IAACS,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACjDpB,OAAA;MACEqB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEf,IAAK;MACZgB,QAAQ,EAAGZ,CAAC,IAAKH,OAAO,CAACG,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;MACzCG,WAAW,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACF7B,OAAA;MAAQqB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAEjB,UAAU,GAAG,QAAQ,GAAG;IAAK;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEX,CAAC;AAACvB,EAAA,CAnCIL,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAqCd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}