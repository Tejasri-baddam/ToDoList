{"ast":null,"code":"var _jsxFileName = \"/Users/tejasribaddam/Desktop/Projects/ToDoList/frontend/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { getTaskToBeDone, deleteDoneTask } from \"../services/TaskServices\";\nimport TaskForm from \"./TaskForm\";\nimport TaskItem from \"./TaskItem\";\nimport \"../styling/TaskList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [taskToEdit, setTaskToEdit] = useState(null);\n  const [showForm, setShowForm] = useState(false);\n\n  // Fetch tasks on mount\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    const data = await getTaskToBeDone();\n    setTasks(data);\n  };\n\n  // Handle adding a new task\n  const handleTaskAdded = newTask => {\n    setTasks([...tasks, newTask]);\n    setShowForm(false);\n  };\n\n  // Handle updating a task\n  const handleEdit = task => {\n    setTaskToEdit(task); // Set task to edit\n  };\n\n  // Handle edit completion\n  const handleEditComplete = updatedTask => {\n    setTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task));\n    setTaskToEdit(null); // Reset editing state\n  };\n\n  // Handle deleting a task\n  const handleDelete = async id => {\n    await deleteDoneTask(id);\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  const closeForm = () => {\n    setShowForm(false);\n    setTaskToEdit(null); // Reset task to edit when closing the form\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your personal assistant for managing tasks effectively!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowForm(true),\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(TaskForm, {\n      onTaskAdded: handleTaskAdded,\n      taskToEdit: taskToEdit,\n      onEditComplete: handleEditComplete,\n      closeForm: closeForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tasks available. Please add a task!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task,\n        onDelete: handleDelete,\n        onEdit: handleEdit\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"OvFn6UjVibI9L2EFgxCMN60lQ/4=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["useState","useEffect","getTaskToBeDone","deleteDoneTask","TaskForm","TaskItem","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","taskToEdit","setTaskToEdit","showForm","setShowForm","fetchTasks","data","handleTaskAdded","newTask","handleEdit","task","handleEditComplete","updatedTask","map","id","handleDelete","filter","closeForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onTaskAdded","onEditComplete","length","onDelete","onEdit","_c","$RefreshReg$"],"sources":["/Users/tejasribaddam/Desktop/Projects/ToDoList/frontend/src/components/TaskList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { getTaskToBeDone, deleteDoneTask } from \"../services/TaskServices\";\nimport TaskForm from \"./TaskForm\";\nimport TaskItem from \"./TaskItem\";\nimport \"../styling/TaskList.css\";\n\nconst TaskList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [taskToEdit, setTaskToEdit] = useState(null);\n  const [showForm, setShowForm] = useState(false); \n\n  // Fetch tasks on mount\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    const data = await getTaskToBeDone();\n    setTasks(data);\n  };\n\n  // Handle adding a new task\n  const handleTaskAdded = (newTask) => {\n    setTasks([...tasks, newTask]);\n    setShowForm(false);\n  };\n\n  // Handle updating a task\n  const handleEdit = (task) => {\n    setTaskToEdit(task); // Set task to edit\n  };\n\n  // Handle edit completion\n  const handleEditComplete = (updatedTask) => {\n    setTasks(tasks.map((task) => (task.id === updatedTask.id ? updatedTask : task)));\n    setTaskToEdit(null); // Reset editing state\n  };\n\n  // Handle deleting a task\n  const handleDelete = async (id) => {\n    await deleteDoneTask(id);\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  const closeForm = () => {\n    setShowForm(false);\n    setTaskToEdit(null); // Reset task to edit when closing the form\n  };\n\n  return (\n    <div className=\"task-container\">\n      <h1>Welcome to Task Manager</h1>\n      <p>Your personal assistant for managing tasks effectively!</p>\n      <button onClick={() => setShowForm(true)}>Add Task</button>\n      {showForm && <TaskForm onTaskAdded={handleTaskAdded} taskToEdit={taskToEdit} onEditComplete={handleEditComplete} closeForm={closeForm} />}\n      \n      <div className=\"task-list\">\n        {tasks.length === 0 ? (\n          <p>No tasks available. Please add a task!</p>\n        ) : (\n          tasks.map((task) => (\n            <TaskItem key={task.id} task={task} onDelete={handleDelete} onEdit={handleEdit} />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}